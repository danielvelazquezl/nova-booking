<div class="col results-filter-block">
  <%= puts filterrific.inspect %>
  <%= form_for_filterrific(filterrific, url: welcome_results_path, html: {id: :manual_filterrific_form}) do |f| %>
    <div class="jumbotron jumbotron-fluid">
      <div class="form-group col-12">
        <div class="row has-search d-flex align-items-center results-block">
          <%= f.text_field :search_query, placeholder: "¿A dónde vas?", id: 'with_search_results',
                           class: "filterrific-periodically-observed" %>
        </div>
        <div class="row has-search d-flex align-items-center results-block">
          <%= f.text_field(:with_date_gte, placeholder: "Fecha de entrada", class: 'form-control datepicker',
                           readonly: true,
                           id: 'with_date_gte') %>
        </div>
        <div class="row has-search d-flex align-items-center results-block">
          <%= f.text_field(:with_date_lte, placeholder: "Fecha de salida", class: 'form-control datepicker',
                           readonly: true,
                           id: 'with_date_lte') %>
        </div>
        <div class="row has-search d-flex align-items-center results-block">
          <%= f.submit :Buscar, class: 'form-control btn btn-outline-primary guardar' %>
        </div>
      </div>
    </div>
    <div class="jumbotron jumbotron-fluid">
      <h4>&emsp; Filtrar por:</h4>
      <hr class="text-primary">
      <!--FILTRO POR FECHA-->
      <h5>Tu presupuesto (Gs.)</h5>
      <div class="form-row">
        <div class="col-6">
          <%= f.number_field :price_min, id: "price_min", class: "filterrific-periodically-observed form-control price", type: "text", placeholder: "Mínimo Gs." %>
        </div>
        <div class="col-6">
          <%= f.number_field :price_max, id: "price_max", class: "filterrific-periodically-observed form-control price", type: "text", placeholder: "Máximo Gs." %>
        </div>
      </div>
      <!--FIN-->
      <hr>
      <!--FILTRO POR TIPO DE PROPIEDAD-->
      <h5>Tipo de alojamiento </h5>
      <div class="form-group col-12">
        <div class="row has-search d-flex align-items-center results-block">
          <%= f.select :with_estate_type, filterrific.select_options[:with_estate_type],
                       {:include_blank => '- Todos -'},
                       {:class => 'filterrific-periodically-observed form-control'} %>
        </div>
      </div>
      <!--FIN-->
      <hr>
      <!--FILTRO POR PUNTUACION-->
      <%= f.hidden_field :score_min, id: "score_min" %>
      <%= f.hidden_field :score_max, id: "score_max" %>
      <p>
        <label for="amount">Rango de Puntuación:</label>
        <input type="text" id="amount" readonly>
        <span class="fas fa-info-circle score_inf " data-toggle="tooltip" data-placement="right" title="0 sin puntuación"></span>
      </p>
      <div id="slider-range" class="filterrific-periodically-observed"></div>
      <!--FIN-->
      <hr>
      <!--FILTRO POR CANCELABLE O NO-->
      <h5>Cancelación de reserva</h5>
      <div class="form-group col-12">
        <div class="row has-search d-flex align-items-center results-block">
          <%= f.select :search_booking_cancelable, filterrific.select_options[:search_booking_cancelable],
                       {:include_blank => '- Todos -'},
                       {:class => 'filterrific-periodically-observed form-control'} %>
        </div>
      </div>
      <!--FIN-->
      <hr>
    </div>
  <% end %>
</div>
<script>
    $(function () {
        $("#slider-range").slider({
            range: true,
            min: 0,
            max: 10,
            value: 0
        });
        $("#slider-range").change(function () {
            let new_min = $("#slider-range").val()[0];
            let new_max = $("#slider-range").val()[1];
            $("#amount").val("(" + new_min + " - " + new_max + ")");
            $("#score_min").val(new_min);
            $("#score_max").val(new_max);
        })
        $("#amount").val("(" + $("#slider-range").val()[0] +
            " - " + $("#slider-range").val()[1] + ")");
        let fromD = $("#with_date_gte").val();
        let toD = $("#with_date_lte").val();
        let startDate = stringToDate(fromD, "yyyy-mm-dd", "-");
        let endDate = stringToDate(toD, "yyyy-mm-dd", "-");
        let newStartDate = dateManipulation(startDate, 1, 0, 0, "+");
        let newEndDate = dateManipulation(endDate, 1, 0, 0, "-");
        let ToEndDate = dateManipulation(new Date(), 365, 0, 0, "+");
        $('#with_date_gte').datepicker({
            weekStart: 1,
            startDate: new Date(),
            endDate: newEndDate,
            autoclose: true,
            orientation: "bottom auto",
            format: "dd MM yyyy",
            language: 'es',
            todayHighlight: true
        }).datepicker('setDate', startDate).on('changeDate', function (selected) {
            newStartDate = new Date(selected.date.valueOf());
            let date = dateManipulation(newStartDate, 1, 0, 0, "+");
            $('#with_date_lte').datepicker('setStartDate', date);
        });
        $('#with_date_lte').datepicker({
            weekStart: 1,
            startDate: newStartDate,
            endDate: ToEndDate,
            autoclose: true,
            orientation: "bottom auto",
            format: "dd MM yyyy",
            language: 'es',
            todayHighlight: true
        }).datepicker('setDate', endDate).on('changeDate', function (selected) {
            newEndDate = new Date(selected.date.valueOf());
            let date = dateManipulation(newEndDate, 1, 0, 0, "-");
            $('#with_date_gte').datepicker('setEndDate', date);
        });
        $("#manual_filterrific_form").on("submit", function (evt) {
            $(".number").each(function (ind, input) {
                input.value = input.value.split(".").join("");
            });
        });

        function stringToDate(_date, _format, _delimiter) {
            var formatLowerCase = _format.toLowerCase();
            var formatItems = formatLowerCase.split(_delimiter);
            var dateItems = _date.split(_delimiter);
            var monthIndex = formatItems.indexOf("mm");
            var dayIndex = formatItems.indexOf("dd");
            var yearIndex = formatItems.indexOf("yyyy");
            var month = parseInt(dateItems[monthIndex]);
            month -= 1;
            var formatedDate = new Date(dateItems[yearIndex], month, dateItems[dayIndex]);
            return formatedDate;
        }

        function dateManipulation(date, days, hrs, mins, operator) {
            date = new Date(date);
            if (operator == "-") {
                var durationInMs = (((24 * days) * 60) + (hrs * 60) + mins) * 60000;
                var newDate = new Date(date.getTime() - durationInMs);
            } else {
                var durationInMs = (((24 * days) * 60) + (hrs * 60) + mins) * 60000;
                var newDate = new Date(date.getTime() + durationInMs);
            }
            return newDate;
        }

        $(document).ready(function () {
            $(".choose").click(function (e) {
                if (!($("#with_date_gte").val())) {
                    e.preventDefault();
                    $("#with_date_gte").datepicker("show");
                } else if (!($("#with_date_lte").val())) {
                    e.preventDefault();
                    $("#with_date_lte").datepicker("show");
                }
            });
        });
    });
</script>